<1. 로그 추적기>
모니터링과 운영을 위해, 어떤 부분에서 장애/병목이 발생하는지, 어떤 부분에서 예외가 발생하는지 알수 있도록 로그를 남겨둘 것
1-1 모든 PUBLIC 메서드의 호출과 응답 정보를 로그로 출력
1-2 애플리케이션의 흐름을 변경하면 안됨
    - 로그를 남긴다고 해서 비즈니스 로직의 동작에 영향을 주면 안됨
1-3 메서드 호출에 걸린 시간
1-4 정상 흐름과 예외 흐름 구분
    - 예외 발생시 예외 정보가 남아야 함
1-5 메서드 호출의 깊이 표현
1-6 HTTP 요청을 구분
    - HTTP 요청 단위로 특정 ID를 남겨서 어떤 HTTP 요청에서 시작된 것인지 명확하게 구분이 가능해야 함
    - 트랜잭션 ID (DB 트랜잭션이 아님, 로그 맨 앞에 붙은 고유 ID 를 의미함), 여기서는 하나의 HTTP 요청이 시작해서 끝날 때 까지를 하나의 트랜잭션이라 함

<2. 프록시, 데코레이터 패턴>
2-1 원본 코드를 전혀 수정하지 않고, 로그 추적기를 적용
2-2 특정 메서드는 로그를 출력하지 않는 기능
    - 보안상 일부는 로그를 출력하면 안된다
2-3 다음과 같은 다양한 케이스에 적용할 수 있어야 한다
    - v1: 인터페이스가 있는 구현 클래스에 적용
    - v2: 인터페이스가 없는 구체 클래스에 적용
    - v3: 컴포넌트 스캔 대상에 기능 적용